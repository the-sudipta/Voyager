<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="roundPicturech_back.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6czKK1vt9EUAAAAASUVORK5CYII=
</value>
  </data>
</root>